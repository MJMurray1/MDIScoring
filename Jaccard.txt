#This function calculates the Jaccard index to compare the similarity of modules
#Modules are to be saved as .csv files consisting of a single column of gene names (or other identifier, as long as it is consistant between modules and data sets).
#Modules should be saved in SigDirectory.
#JaccardOutputDirectory specifies where the outputs from this function will be written
#Cell Name is simply the type of cell for which modules are being compared and will be used in the final file name only

Jaccard<-function(SigDirectory,JaccardOutputDirectory,CellName){
  
jaccard <- function(x,y){ #Specify how to calculate Jaccard Infex
  jInt <- intersect(x,y)
  jUnion <- unique(c(x,y))
  return(length(jInt)/length(jUnion))}

  
  signature_list <- list.files(SigDirectory,full.names=TRUE) #List of signatures to calculate Jaccard indices for
  
JaccardMatrix<-numeric() #Create empty results vector

for(signature in signature_list){ #Loop through each signature
    
    Signature<-read.csv(signature) #Read signature
    Signature<-Signature[,1]
    Signature<-tolower(Signature) #convert to lower case for consistency
    
    JaccardList<-numeric() #create empty results vector for signautre
    
   for(CompSignature in signature_list){ #Loop through all signatures
     CompSig<-read.csv(CompSignature) #Read signature to compare against
     CompSig<-CompSig[,1]
     CompSig<-tolower(CompSig) #convert to lower case for consistency
     JaccardIndex<-jaccard(Signature,CompSig) #Calculate Jaccard index for this particular pair of signatures
     JaccardList<-rbind(JaccardList,JaccardIndex) #Compile results for 'Signature'
   }
  JaccardMatrix<-cbind(JaccardMatrix, JaccardList) #Compile results from all signatures
}
Sigs<-unlist(strsplit(signature_list,split=SigDirectory,fixed=TRUE)) #Tidy up signature names for output
Sigs<-Sigs[seq(2,length(Sigs),2)]
Sigs<-unlist(strsplit(Sigs,split=".cs",fixed=TRUE))
Sigs<-Sigs[seq(1,length(Sigs),2)]
Sigs<-substring(Sigs,2) #Final signature names

rownames(JaccardMatrix)<-Sigs #Label results
colnames(JaccardMatrix)<-Sigs #Label results

write.csv(JaccardMatrix,file=paste(JaccardOutputDirectory,"//",CellName,"Jaccard.csv",sep="")) #Write results file

}

    